import { routing } from '@/i18n/routing';
import type { Metadata } from "next";
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { setRequestLocale, getMessages } from 'next-intl/server';
import { Cinzel, Mea_Culpa, Montserrat } from "next/font/google";
import { notFound } from 'next/navigation';
import "./globals.css";

const herrVonMuellerhoff = Mea_Culpa({
    variable: "--font-herr-von-muellerhoff",
    weight: '400',
    subsets: ["latin"],
});

const cinzel = Cinzel({
    variable: "--font-cinzel",
    subsets: ["latin"],
});

const montserrat = Montserrat({
    variable: "--font-montserrat",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Restaurant website",
    description: "Generated by create next app",
};

export default async function LocaleLayout({
    children,
    params
  }: {
    children: React.ReactNode;
    params: Promise<{locale: string}>;
  }) {
    // Ensure that the incoming `locale` is valid
    const {locale} = await params;
    if (!hasLocale(routing.locales, locale)) {
      notFound();
    }
    setRequestLocale(locale);

    const messages = await getMessages(); // This fetches from the file in `request.ts`

    return (
        <html lang={locale} >
            <body
                className={`${cinzel.variable} ${herrVonMuellerhoff.variable} ${montserrat.variable} antialiased`}
                suppressHydrationWarning
                suppressContentEditableWarning
            >
                <NextIntlClientProvider locale={locale} messages={messages}>
                    {children}
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
